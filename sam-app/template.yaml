AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python-graphql-aws

  Sample SAM Template for python-graphql-aws

Globals:
  Function:
    Timeout: 10
    MemorySize: 128

Parameters:
  Region:
    Type: String
    Default: ap-southeast-2
  AWSEnv:
    Type: String
    Default: AWS
  S3BucketName:
    Type: String
    Default: pet-profile-image
    Description: "The name of the S3 bucket to store pet profile images"
  DynamoDBTableName:
    Type: String
    Default: pet-profile-table
    Description: "The name of the DynamoDB table to store pet profile info"

Resources:
  PetApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        ApiKeyRequired: true
      Cors:
        AllowMethods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
        AllowHeaders: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
        AllowOrigin: "'*'"

  PetApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pet_python_api/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3BucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTableName
      Environment:
        Variables:
          REGION: !Ref Region
          AWSENV: !Ref AWSEnv
          S3_BUCKET: !Ref S3BucketName
          DYNAMODB_TABLE: !Ref DynamoDBTableName
      Events:
        GetPetsApi:
          Type: Api
          Properties:
            Path: /pets
            Method: post
            RestApiId: !Ref PetApi
        UpdateAvailabilityApi:
          Type: Api
          Properties:
            Path: /pet
            Method: patch
            RestApiId: !Ref PetApi
        SavePetApi:
          Type: Api
          Properties:
            Path: /pet
            Method: post
            RestApiId: !Ref PetApi

  PetProfileImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods: ["GET"]
            AllowedOrigins: ["*"]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  PetProfileImageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${S3BucketName}/*"

  PetProfileTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      AttributeDefinitions:
        - AttributeName: petId
          AttributeType: S
      KeySchema:
        - AttributeName: petId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties: 
      ApiStages:
        - ApiId: !Ref PetApi
          Stage: !Ref PetApi.Stage
      UsagePlanName: PetApiUsagePlan
      Description: "Usage plan for Pet API"
      Throttle:
        BurstLimit: 100
        RateLimit: 50

  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref UsagePlan

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Enabled: true
      GenerateDistinctId: true
      Name: PetApiKey

Outputs:
  PetApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for Pet API function"
    Value: !Sub "https://${PetApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  PetApiFunctionArn:
    Description: "Pet API Lambda Function ARN"
    Value: !GetAtt PetApiFunction.Arn
  PetApiFunctionIamRole:
    Description: "Implicit IAM Role created for Pet API function"
    Value: !GetAtt PetApiFunctionRole.Arn
  PetProfileTable:
    Description: "DynamoDB Table Name"
    Value: !Ref DynamoDBTableName
  PetApiKey:
    Description: "API Key for Pet API"
    Value: !Ref ApiKey
    